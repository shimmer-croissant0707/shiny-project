anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub("^\\s+", "", anime1$OP)
anime1$ED <- gsub("^\\s+", "", anime1$ED)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime1 <- separate_rows(anime1, OP, sep = ',')
anime1 <- separate_rows(anime1, ED, sep = ',')
anime1$OP <- gsub(".*\\d.*", NA, anime1$OP)
anime1$ED <- gsub(".*\\d.*", NA, anime1$ED)
# removing all NA's and empty spaces
anime1 <- anime1[anime1$OP != "" & anime1$ED != "", ]
anime1 <- anime1[complete.cases(anime1), ]
unique(anime1)
anime2 <- unique(anime1)
View(anime2)
names(users)
colSums(is.na(users))
users[1]
users[,1]
View(users)
name(anime1)
names(anime)
names(anime1)
anime1 %>% group_by(OP) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
anime1 %>% group_by(ED) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
anime1$OP <- gsub("^\\s+", "", anime1$OP)
anime1$ED <- gsub("^\\s+", "", anime1$ED)
anime1 %>% group_by(ED) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime1 <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime1 <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub("^\\s+", "", anime1$OP)
anime1$ED <- gsub("^\\s+", "", anime1$ED)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime1 <- separate_rows(anime1, OP, sep = ',')
anime1 <- separate_rows(anime1, ED, sep = ',')
anime1$OP <- gsub(".*\\d.*", NA, anime1$OP)
anime1$ED <- gsub(".*\\d.*", NA, anime1$ED)
# removing all NA's and empty spaces
anime1 <- anime1[anime1$OP != "" & anime1$ED != "", ]
anime1 <- anime1[complete.cases(anime1), ]
anime1 %>% group_by(ED) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime1 <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime1 <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime1 <- separate_rows(anime1, OP, sep = ',')
anime1 <- separate_rows(anime1, ED, sep = ',')
anime1$OP <- gsub(".*\\d.*", NA, anime1$OP)
anime1$ED <- gsub(".*\\d.*", NA, anime1$ED)
anime1$OP <- gsub("^\\s+", "", anime1$OP)
anime1$ED <- gsub("^\\s+", "", anime1$ED)
anime1 <- anime1[anime1$OP != "" & anime1$ED != "", ]
anime1 <- anime1[complete.cases(anime1), ]
anime1 %>% group_by(ED) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
anime1 %>% group_by(Ai) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
anime1 %>% group_by(OP) %>% summarise(count = n()) %>% arrange(desc(count)) %>% head(10)
min(anime1$duration)
min(anime$year)
min(anime1$year)
max(anime1$year)
names(anime1)
View(anime1)
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime2 <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime3 <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime4 <- separate_rows(anime1, OP, sep = ',')
anime5 <- separate_rows(anime1, ED, sep = ',')
anime4$OP <- gsub(".*\\d.*", NA, anime4$OP)
anime5$ED <- gsub(".*\\d.*", NA, anime5$ED)
anime4$OP <- gsub("^\\s+", "", anime4$OP)
anime5$ED <- gsub("^\\s+", "", anime5$ED)
# removing all NA's and empty spaces
anime4 <- anime4[anime4$OP != "" & anime4$ED != "", ]
anime4 <- anime4[complete.cases(anime4), ]
anime5 <- anime5[anime5$OP != "" & anime5$ED != "", ]
anime5 <- anime5[complete.cases(anime5), ]
View(anime5)
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime_studio <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime_genre <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime4 <- separate_rows(anime1, OP, sep = ',')
anime5 <- separate_rows(anime1, ED, sep = ',')
anime4$OP <- gsub(".*\\d.*", NA, anime4$OP)
anime5$ED <- gsub(".*\\d.*", NA, anime5$ED)
anime4$OP <- gsub("^\\s+", "", anime4$OP)
anime5$ED <- gsub("^\\s+", "", anime5$ED)
# removing all NA's and empty spaces
anime_op <- anime_op[anime_op$OP != "" & anime4$ED != "", ]
anime_op <- anime_op[complete.cases(anime_op), ]
anime_ed <- anime_ed[anime_ed$OP != "" & anime5$ED != "", ]
anime_ed <- anime_ed[complete.cases(anime_ed), ]
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime_studio <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime_genre <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime_op <- separate_rows(anime1, OP, sep = ',')
anime_ed <- separate_rows(anime1, ED, sep = ',')
anime4$OP <- gsub(".*\\d.*", NA, anime_op$OP)
anime5$ED <- gsub(".*\\d.*", NA, anime_ed$ED)
anime4$OP <- gsub("^\\s+", "", anime_op$OP)
anime5$ED <- gsub("^\\s+", "", anime_ed$ED)
# removing all NA's and empty spaces
anime_op <- anime_op[anime_op$OP != "" & anime_op$ED != "", ]
anime_op <- anime_op[complete.cases(anime_op), ]
anime_ed <- anime_ed[anime_ed$OP != "" & anime_ed$ED != "", ]
anime_ed <- anime_ed[complete.cases(anime_ed), ]
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime_studio <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime_genre <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime_op <- separate_rows(anime1, OP, sep = ',')
anime_ed <- separate_rows(anime1, ED, sep = ',')
anime4$OP <- gsub(".*\\d.*", NA, anime_op$OP)
anime5$ED <- gsub(".*\\d.*", NA, anime_ed$ED)
anime4$OP <- gsub("^\\s+", "", anime_op$OP)
anime5$ED <- gsub("^\\s+", "", anime_ed$ED)
# removing all NA's and empty spaces
anime_op <- anime_op[anime_op$OP != "" & anime_op$ED != "", ]
anime_op <- anime_op[complete.cases(anime_op), ]
anime_ed <- anime_ed[anime_ed$OP != "" & anime_ed$ED != "", ]
anime_ed <- anime_ed[complete.cases(anime_ed), ]
library(dplyr)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(tidyr)
library(googleVis)
library(DT)
library(lubridate)
anime <- read.csv("anime_info.csv", header = TRUE, na.strings = c("","NA"), stringsAsFactors = FALSE)
users <- read.csv("user_info.csv", na.strings = c("","NA"),stringsAsFactors = FALSE, header = TRUE)
# Data Cleaning for anime dataframe
# selecting needed columns and remove NA values
anime1 <- anime %>% select(title, title_japanese, type, source, episodes, aired_string, duration,
rating, score, scored_by, members, favorites, studio, genre,
opening_theme, ending_theme)
anime1 <- anime1[complete.cases(anime1), ]
# modifying aired_string (changed column name to year)
anime1$aired_string <- gsub(' to.*' ,'', anime1$aired_string)
anime1$aired_string <- as.numeric(gsub('.*, ', '', anime1$aired_string))
anime1 <- rename(anime1, year = `aired_string`)
# modifying duration
anime1$duration <- gsub(" per.*", "",anime1$duration)
anime1$duration <- gsub(" hr. ","\\1", anime1$duration)
# for convenience, we treat those animes less than a minute to one minute
anime1$duration <- gsub(".*sec.", "1 min.", anime1$duration)
anime1$duration <- as.numeric(gsub(" min.", "", anime1$duration))
# modifying rating
anime1$rating <- gsub(" -.*","",anime1$rating)
# modifying studio (use tidyr::seperate_rows to split one record into several ones to get closer to better
# data presentation principles), we perform this action to genre/OP/ED as well
anime_studio <- separate_rows(anime1, studio, sep = ', ')
# modifying genre
anime_genre <- separate_rows(anime1, genre, sep = ', ')
# modifying opening_theme/ending_theme
anime1 <- rename(anime1, OP = `opening_theme`)
anime1 <- rename(anime1, ED = `ending_theme`)
anime1$OP <- gsub('\\[|\\]','',anime1$OP)
anime1$ED <- gsub('\\[|\\]','',anime1$ED)
#write a function to organize OP and ED
organizeOPED = function(string){
return(paste(gsub(".*by | \\(.*|'$", "", unlist(strsplit(string, split = ','))), collapse = ', '))
}
anime1$OP <- sapply(anime1$OP, organizeOPED)
anime1$ED <- sapply(anime1$ED, organizeOPED)
anime1$OP <- gsub("&#039;", "'", anime1$OP, fixed = TRUE)
anime1$ED <- gsub("&#039;", "'", anime1$ED, fixed = TRUE)
anime1$OP <- gsub(" featuring | [Ff]eat\\. | and | \\& ", ",", anime1$OP)
anime1$ED <- gsub(" featuring | [Ff]eat\\. | and | \\&", ",", anime1$ED)
anime_op <- separate_rows(anime1, OP, sep = ',')
anime_ed <- separate_rows(anime1, ED, sep = ',')
anime_op$OP <- gsub(".*\\d.*", NA, anime_op$OP)
anime_ed$ED <- gsub(".*\\d.*", NA, anime_ed$ED)
anime_op$OP <- gsub("^\\s+", "", anime_op$OP)
anime_ed$ED <- gsub("^\\s+", "", anime_ed$ED)
# removing all NA's and empty spaces
anime_op <- anime_op[anime_op$OP != "" & anime_op$ED != "", ]
anime_op <- anime_op[complete.cases(anime_op), ]
anime_ed <- anime_ed[anime_ed$OP != "" & anime_ed$ED != "", ]
anime_ed <- anime_ed[complete.cases(anime_ed), ]
anime_op %>% group_by(OP) %>% summarise(count = n()) %>%
arrange(desc(count)) %>% head(10)
View(anime_op)
unique(anime_op$OP)
nunique(anime_op$OP)
length(unique(anime_op$OP))
anime_ed %>% group_by(ED) %>% summarise(count = n()) %>%
arrange(desc(count)) %>% head(10)
names(anime1)
sapply(anime1, class)
lapply(anime1, class)
length(unique(anime1$genre))
length(unique(anime$genre))
length(unique(anime_genre$genre))
unique(anime_genre$genre)
anime_genre %>% group_by(genre) %>% summarise(count = n()) %>%
arrange(desc(count)) %>% head(10)
runApp()
runApp()
install.packages("shinythemes")
library(shinythemes)
dashboardPage(theme = shinytheme("sketch"),
dashboardHeader(title = "Investigation of Anime"),
dashboardSidebar(menuItem("Source code", icon = icon("file-code-o"),
href = "https://github.com/rstudio/shinydashboard/")),
dashboardBody(),
)
runApp()
install.packages("shinyUI")
install.packages("shinyUI")
runApp()
runApp()
runApp()
library(devtools)
install_github("nik01010/dashboardthemes")
library(dashboradthemes)
runApp()
runApp()
runApp()
library(dashboardthemes)
library(dashboardthemes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
